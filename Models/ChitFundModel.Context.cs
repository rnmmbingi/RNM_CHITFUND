//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RNM_CHITFUND.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RNM_CHITFUNDEntities : DbContext
    {
        public RNM_CHITFUNDEntities()
            : base("name=RNM_CHITFUNDEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbl_Chitti> tbl_Chitti { get; set; }
        public virtual DbSet<tbl_Cust> tbl_Cust { get; set; }
        public virtual DbSet<tbl_Enroll_Cust> tbl_Enroll_Cust { get; set; }
        public virtual DbSet<tbl_LiftedCustomer> tbl_LiftedCustomer { get; set; }
        public virtual DbSet<tbl_MonthlyPayment> tbl_MonthlyPayment { get; set; }
        public virtual DbSet<tbl_Users> tbl_Users { get; set; }
    
        public virtual int Pro_InsertChit(Nullable<decimal> c_value, Nullable<byte> months, Nullable<decimal> instl_amt, string c_type, Nullable<int> members, Nullable<decimal> payableAmt, Nullable<decimal> auctionAmt, Nullable<decimal> commAmt, Nullable<System.DateTime> dateAuction, Nullable<System.DateTime> datestart)
        {
            var c_valueParameter = c_value.HasValue ?
                new ObjectParameter("c_value", c_value) :
                new ObjectParameter("c_value", typeof(decimal));
    
            var monthsParameter = months.HasValue ?
                new ObjectParameter("months", months) :
                new ObjectParameter("months", typeof(byte));
    
            var instl_amtParameter = instl_amt.HasValue ?
                new ObjectParameter("instl_amt", instl_amt) :
                new ObjectParameter("instl_amt", typeof(decimal));
    
            var c_typeParameter = c_type != null ?
                new ObjectParameter("c_type", c_type) :
                new ObjectParameter("c_type", typeof(string));
    
            var membersParameter = members.HasValue ?
                new ObjectParameter("members", members) :
                new ObjectParameter("members", typeof(int));
    
            var payableAmtParameter = payableAmt.HasValue ?
                new ObjectParameter("payableAmt", payableAmt) :
                new ObjectParameter("payableAmt", typeof(decimal));
    
            var auctionAmtParameter = auctionAmt.HasValue ?
                new ObjectParameter("auctionAmt", auctionAmt) :
                new ObjectParameter("auctionAmt", typeof(decimal));
    
            var commAmtParameter = commAmt.HasValue ?
                new ObjectParameter("commAmt", commAmt) :
                new ObjectParameter("commAmt", typeof(decimal));
    
            var dateAuctionParameter = dateAuction.HasValue ?
                new ObjectParameter("dateAuction", dateAuction) :
                new ObjectParameter("dateAuction", typeof(System.DateTime));
    
            var datestartParameter = datestart.HasValue ?
                new ObjectParameter("datestart", datestart) :
                new ObjectParameter("datestart", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Pro_InsertChit", c_valueParameter, monthsParameter, instl_amtParameter, c_typeParameter, membersParameter, payableAmtParameter, auctionAmtParameter, commAmtParameter, dateAuctionParameter, datestartParameter);
        }
    
        public virtual int Pro_InsertCust(string cust_name, string surname, string father, string gender, string addr, Nullable<long> mob1, Nullable<long> mob2, string refBy, Nullable<long> refMob)
        {
            var cust_nameParameter = cust_name != null ?
                new ObjectParameter("Cust_name", cust_name) :
                new ObjectParameter("Cust_name", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("surname", surname) :
                new ObjectParameter("surname", typeof(string));
    
            var fatherParameter = father != null ?
                new ObjectParameter("father", father) :
                new ObjectParameter("father", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var addrParameter = addr != null ?
                new ObjectParameter("addr", addr) :
                new ObjectParameter("addr", typeof(string));
    
            var mob1Parameter = mob1.HasValue ?
                new ObjectParameter("mob1", mob1) :
                new ObjectParameter("mob1", typeof(long));
    
            var mob2Parameter = mob2.HasValue ?
                new ObjectParameter("mob2", mob2) :
                new ObjectParameter("mob2", typeof(long));
    
            var refByParameter = refBy != null ?
                new ObjectParameter("refBy", refBy) :
                new ObjectParameter("refBy", typeof(string));
    
            var refMobParameter = refMob.HasValue ?
                new ObjectParameter("refMob", refMob) :
                new ObjectParameter("refMob", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Pro_InsertCust", cust_nameParameter, surnameParameter, fatherParameter, genderParameter, addrParameter, mob1Parameter, mob2Parameter, refByParameter, refMobParameter);
        }
    
        public virtual ObjectResult<Pro_DuePayment_Cust_List_ByMonthYear_Result> Pro_DuePayment_Cust_List_ByMonthYear(string chitti_Id, string monthOfPament)
        {
            var chitti_IdParameter = chitti_Id != null ?
                new ObjectParameter("chitti_Id", chitti_Id) :
                new ObjectParameter("chitti_Id", typeof(string));
    
            var monthOfPamentParameter = monthOfPament != null ?
                new ObjectParameter("MonthOfPament", monthOfPament) :
                new ObjectParameter("MonthOfPament", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pro_DuePayment_Cust_List_ByMonthYear_Result>("Pro_DuePayment_Cust_List_ByMonthYear", chitti_IdParameter, monthOfPamentParameter);
        }
    
        public virtual ObjectResult<Pro_GetChittiSchemeByID_Result> Pro_GetChittiSchemeByID(string chit_ID)
        {
            var chit_IDParameter = chit_ID != null ?
                new ObjectParameter("chit_ID", chit_ID) :
                new ObjectParameter("chit_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pro_GetChittiSchemeByID_Result>("Pro_GetChittiSchemeByID", chit_IDParameter);
        }
    
        public virtual int Pro_InsertEnrollScheme(string cust_ID, string chitt_ID)
        {
            var cust_IDParameter = cust_ID != null ?
                new ObjectParameter("Cust_ID", cust_ID) :
                new ObjectParameter("Cust_ID", typeof(string));
    
            var chitt_IDParameter = chitt_ID != null ?
                new ObjectParameter("Chitt_ID", chitt_ID) :
                new ObjectParameter("Chitt_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Pro_InsertEnrollScheme", cust_IDParameter, chitt_IDParameter);
        }
    
        public virtual int pro_InsertLiftedCustomer(Nullable<int> enrolId, string custId, string chitiId, Nullable<System.DateTime> liftedDate, Nullable<decimal> paidAmount, string surity, string witness1, string witness2, string modeofPay)
        {
            var enrolIdParameter = enrolId.HasValue ?
                new ObjectParameter("enrolId", enrolId) :
                new ObjectParameter("enrolId", typeof(int));
    
            var custIdParameter = custId != null ?
                new ObjectParameter("custId", custId) :
                new ObjectParameter("custId", typeof(string));
    
            var chitiIdParameter = chitiId != null ?
                new ObjectParameter("chitiId", chitiId) :
                new ObjectParameter("chitiId", typeof(string));
    
            var liftedDateParameter = liftedDate.HasValue ?
                new ObjectParameter("liftedDate", liftedDate) :
                new ObjectParameter("liftedDate", typeof(System.DateTime));
    
            var paidAmountParameter = paidAmount.HasValue ?
                new ObjectParameter("paidAmount", paidAmount) :
                new ObjectParameter("paidAmount", typeof(decimal));
    
            var surityParameter = surity != null ?
                new ObjectParameter("surity", surity) :
                new ObjectParameter("surity", typeof(string));
    
            var witness1Parameter = witness1 != null ?
                new ObjectParameter("witness1", witness1) :
                new ObjectParameter("witness1", typeof(string));
    
            var witness2Parameter = witness2 != null ?
                new ObjectParameter("witness2", witness2) :
                new ObjectParameter("witness2", typeof(string));
    
            var modeofPayParameter = modeofPay != null ?
                new ObjectParameter("modeofPay", modeofPay) :
                new ObjectParameter("modeofPay", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pro_InsertLiftedCustomer", enrolIdParameter, custIdParameter, chitiIdParameter, liftedDateParameter, paidAmountParameter, surityParameter, witness1Parameter, witness2Parameter, modeofPayParameter);
        }
    
        public virtual int Pro_RegisterUser(string name, string surname, string username, string password, Nullable<long> phone, string email)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("surname", surname) :
                new ObjectParameter("surname", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(long));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Pro_RegisterUser", nameParameter, surnameParameter, usernameParameter, passwordParameter, phoneParameter, emailParameter);
        }
    
        public virtual int Pro_UpdateChit(string chit_ID, Nullable<decimal> c_value, Nullable<byte> months, Nullable<decimal> instl_amt, string c_type, Nullable<int> members, Nullable<decimal> payableAmt, Nullable<decimal> auctionAmt, Nullable<decimal> commAmt, Nullable<System.DateTime> dateAuction, Nullable<System.DateTime> datestart)
        {
            var chit_IDParameter = chit_ID != null ?
                new ObjectParameter("chit_ID", chit_ID) :
                new ObjectParameter("chit_ID", typeof(string));
    
            var c_valueParameter = c_value.HasValue ?
                new ObjectParameter("c_value", c_value) :
                new ObjectParameter("c_value", typeof(decimal));
    
            var monthsParameter = months.HasValue ?
                new ObjectParameter("months", months) :
                new ObjectParameter("months", typeof(byte));
    
            var instl_amtParameter = instl_amt.HasValue ?
                new ObjectParameter("instl_amt", instl_amt) :
                new ObjectParameter("instl_amt", typeof(decimal));
    
            var c_typeParameter = c_type != null ?
                new ObjectParameter("c_type", c_type) :
                new ObjectParameter("c_type", typeof(string));
    
            var membersParameter = members.HasValue ?
                new ObjectParameter("members", members) :
                new ObjectParameter("members", typeof(int));
    
            var payableAmtParameter = payableAmt.HasValue ?
                new ObjectParameter("payableAmt", payableAmt) :
                new ObjectParameter("payableAmt", typeof(decimal));
    
            var auctionAmtParameter = auctionAmt.HasValue ?
                new ObjectParameter("auctionAmt", auctionAmt) :
                new ObjectParameter("auctionAmt", typeof(decimal));
    
            var commAmtParameter = commAmt.HasValue ?
                new ObjectParameter("commAmt", commAmt) :
                new ObjectParameter("commAmt", typeof(decimal));
    
            var dateAuctionParameter = dateAuction.HasValue ?
                new ObjectParameter("dateAuction", dateAuction) :
                new ObjectParameter("dateAuction", typeof(System.DateTime));
    
            var datestartParameter = datestart.HasValue ?
                new ObjectParameter("datestart", datestart) :
                new ObjectParameter("datestart", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Pro_UpdateChit", chit_IDParameter, c_valueParameter, monthsParameter, instl_amtParameter, c_typeParameter, membersParameter, payableAmtParameter, auctionAmtParameter, commAmtParameter, dateAuctionParameter, datestartParameter);
        }
    }
}
